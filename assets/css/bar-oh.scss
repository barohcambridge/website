/// Extract RGB vector values from a colour
///
/// @param {Color} $color	Any valid colour
/// @return {List}		Comma-separated RGB values
///
/// This is intended for assignment to CSS variables that can
/// subsequently be used within rgba() expressions to construct
/// semi-transparent versions of the colour.
///
@function rgbv($color) {
    @return red($color), green($color), blue($color);
}

/// Global behaviour
///
/// - smooth scrolling with top scroll margin for relative anchors
///
/// - sane box sizing
///
html {
    scroll-behavior: smooth;
}
* {
    scroll-margin-top: 1rem;
    box-sizing: border-box;
}

/// Grid layout
///
/// Desktop: nav on left, header-main-footer on right
/// Mobile: nav grows down from top, then header-main-footer
///
body {
    // Desktop grid layout
    display: grid;
    grid-template-areas:
	"nav header"
	"nav main"
	"nav footer";
    grid-template-columns: 12rem 1fr;
    margin: 0;
}
body > nav {
    // Nav: full-height sticky section with vertical scroll if needed
    grid-area: nav;
    max-width: 100%;
    padding: 0 1rem;
    position: sticky;
    top: 0;
    height: 100vh;
    overflow: hidden auto;
}
body > header {
    // Header: no padding to allow for full-width image behind text
    grid-area: header;
    max-width: 100%;
    padding: 0;
    position: relative;
    overflow: hidden;
}
body > main {
    // Main body: full width, padded left and right
    grid-area: main;
    max-width: 100%;
    padding: 0 1rem;
}
body > footer {
    // Footer: full width, padded left and right
    grid-area: footer;
    max-width: 100%;
    padding: 0 1rem;
}
#nav-checkbox, .nav-label, .nav-link {
    // Nav controls hidden by default
    display: none;
}
@media(max-width: 800px) {
    // Mobile version
    body {
	// Mobile grid layout
	grid-template-areas:
	    "nav"
	    "header"
	    "main"
	    "footer";
	grid-template-columns: 1fr;
    }
    body > nav {
	// Nav: zero-height and invisible by default
	position: static;
	max-height: 0;
	transition: max-height 0.3s ease;
    }
    body > nav > * {
	// Nav elements (excluding control itself): transparent by default
	opacity: 0;
	transition: opacity 0.8s ease;
    }
    body:has(#nav-checkbox:checked) > nav {
	// Nav: full viewport height when opened
	max-height: 100vh;
    }
    body:has(#nav-checkbox:checked) > nav > * {
	// Nav elements: fade in when opened
	opacity: 1;
    }
    .nav-label {
	// Nav controls visible by default
	display: block;
	opacity: 1;
    }
    body:has(#nav-checkbox:checked) > header .nav-label {
	// Hide header nav label while nav is open
	display: none;
    }
    body:has(#nav-checkbox:checked) > header .nav-link {
	// Show header nav link (instead of label) while nav is open
	display: block;
    }
}

/// Background gradients
///
/// - red curtain effect for header, main, and footer
///
/// - grey pillar effect for nav
///
$curtain: rgb(64, 0, 0);
$pillar: rgb(24, 24, 24);
body > header, body > main, body > footer {
    // Red curtains
    background: linear-gradient(
	to right,
	$curtain,
	black 25%,
	black 75%,
	$curtain,
    );
}
body > nav {
    // Grey pillar, fading smoothly to red curtain
    background: linear-gradient(
	to right,
	$pillar,
	black 10%,
	$pillar 40%,
	$pillar 60%,
	black 90%,
	$curtain,
    );
}
@media(max-width: 800px) {
    // Mobile version
    body > nav {
	// Grey pillar (no fade to red)
	background: linear-gradient(
	    to right,
	    $pillar,
	    $pillar 5%,
	    black 30%,
	    black 70%,
	    $pillar 95%,
	    $pillar,
	);
    }
}

/// Fonts: "Inter" for body text, "Special Elite" for headings
///
/// The suggested font fallback lists are derived from
/// https://modernfontstacks.com/
///
:root {
    // Fallback fonts
    --font-neo-grotesque:
	"Roboto",
	"Helvetica Neue",
	"Arial Nova",
	"Nimbus Sans",
	"Arial",
	sans-serif;
    --font-monospace-slab-serif:
	"Nimbus Mono PS",
	"Courier New",
	monospace;
    // Body text: Inter (or generic Neo Grotesque)
    --font-size-body: clamp(1rem, 0.8vw + 0.8rem, 2rem);
    --font-body:
	var(--font-size-body)/1.4
	"Inter", var(--font-neo-grotesque);
    // Headings: Special Elite (or generic Monospace Slab Serif)
    --font-size-head: 1.2rem;
    --font-head:
	var(--font-size-head)/1.25
	"Special Elite", var(--font-monospace-slab-serif);
}

/// Basic typography
///
/// - two font families (body text and headings)
///
/// - dark mode colours to match overall dark appearance
///
html {
    // Basic body text
    font: var(--font-body);
    color: rgb(192, 200, 208);
    background-color: black;
    text-rendering: optimizeLegibility;
    text-underline-offset: 0.125em;
}
h1, h2, h3, h4, h5, h6 {
    // All headings centered and in heading font
    font: var(--font-head);
    text-align: center;
    text-wrap: balance;
    color: rgb(240, 240, 240);
}
h1 {
    // Page heading
    font-size: 3rem;
}
h2 {
    // Section headings
    font-size: 1.8rem;
}
address {
    // Do not use italics for addresses
    font-style: normal;
}
article {
    // Approximate appearance of a sheet of paper
    padding: 1rem 2rem;
    color: rgb(32, 32, 32);
    background-color: beige;
}
img {
    // Keep aspect ratio, use histogram colours as background if defined
    display: block;
    width: auto;
    height: auto;
    background: linear-gradient(var(--img-colors));
}

/// Tables
///
/// - dark background to match overall dark appearance
///
/// - lines between rows (not columns)
///
/// - hidden header row if empty (since cannot be omitted in Markdown)
///
table {
    // Dark background, no borders by default
    background-color: rgb(19, 23, 31);
    border-spacing: 0;
}
thead > tr:not(:has(th:not(:empty))) {
    // Hidden header row if empty
    display: none;
}
tbody > tr:last-child > td {
    // Hide border underneath final row
    border-bottom: none;
}
td {
    // Line between rows
    padding: 0.5rem;
    border: none;
    border-bottom: 1px solid rgb(64, 64, 64);
}
td:first-child {
    // Extra padding to left of first column (with border extending to edge)
    padding-left: 0.8rem;
}
td:last-child {
    // Extra padding to right of last column (with border extending to edge)
    padding-right: 0.8rem;
}
td > a {
    // Force links to wrap as a complete unit
    white-space: nowrap;
}

/// Link highlighting
///
a {
    // Colours defined on the base link
    --link-rgbv: #{rgbv(rgb(255, 128, 128))};
    --link-hover-rgbv: #{rgbv(rgb(255, 168, 168))};
    --link-hover-shadow-rgbv: #{rgbv(rgb(255, 128, 128))};
    --link-active-rgbv: #{rgbv(rgb(255, 192, 192))};
    --link-active-shadow-rgbv: #{rgbv(rgb(255, 168, 168))};
    --link-underline-opacity: 1;
    color: rgba(var(--link-rgbv), 1);
    text-decoration-line: underline;
    text-decoration-thickness: 1px;
    text-decoration-color:
	rgba(var(--link-rgbv), var(--link-underline-opacity));
    transition:
	color 0.2s ease-in-out,
	text-decoration-color 0.2s ease-in-out,
	text-shadow 0.2s ease-in-out;
}
a:hover, a:focus-visible {
    // Glow on hover or tab focus
    --link-underline-opacity: 1;
    --link-rgbv: var(--link-hover-rgbv);
    --text-shadow-rgbv: var(--link-hover-shadow-rgbv);
}
a:active {
    // Glow brighter on activation
    --link-underline-opacity: 1;
    --link-rgbv: var(--link-active-rgbv);
    --text-shadow-rgbv: var(--link-active-shadow-rgbv);
}

/// Nav controls
///
a#nav {
    // Zero-height link target
    display: block;
    margin: 0;
    padding: 0;
}
.nav-label, .nav-link {
    // Nav control symbol (as label or as link)
    padding: 0;
    margin: 1rem auto 0;
    text-align: center;
    font: var(--font-head);
    font-size: 1.5rem;
    color: white;
    text-decoration: none;
}

/// Nav text contents
///
nav p, nav ul, nav li {
    // Top-level block items
    display: block;
    padding: 0;
    margin: 0;
    font: var(--font-head);
    text-align: center;
}
nav li a {
    // Menu links
    --link-rgbv: #{rgbv(white)};
    --link-hover-rgbv: #{rgbv(white)};
    --link-hover-shadow-rgbv: #{rgbv(rgb(255, 224, 224))};
    --link-underline-opacity: 0;
    display: block;
    padding: calc(clamp(0px, 2.5vh - 0.4em, 0.3em)) 0;
    margin: 0.5rem auto;
    width: 100%;
    text-underline-offset: 0.175em;
}

/// Nav logo
///
nav img {
    // Occupy at most 25% of the viewport, grow/shrink smoothly
    max-width: 50%;
    max-height: 25vh;
    margin: 0.5rem auto 1rem;
    transition:
	max-height 0.3s ease,
	filter 0.5s ease;
}
nav img:hover, nav img:focus-visible {
    // Glow on hover
    --drop-shadow-rgbv: #{rgbv(rgb(192, 0, 0))};
}
nav img:active {
    // Glow brighter on activation
    --drop-shadow-rgbv: #{rgbv(rgb(255, 0, 0))};
}

/// Page header
///
/// - image placed behind text
///
/// - image darkened and faded out towards main body
///
/// - text shadow to increase legibility against image
///
header > img {
    // Full width, masked, centered, truncated top and bottom
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    mask-image: linear-gradient(
	to bottom,
	rgba(0, 0, 0, 1),
	rgba(0, 0, 0, 0.6) 40%,
	rgba(0, 0, 0, 0.4) 80%,
	rgba(0, 0, 0, 0)
    );
}
header > * {
    // Placed in front of image, apply text shadow for contrast
    position: relative;
    text-shadow:
	0 0 4px rgba(0, 0, 0, 0.6),
	0 0 12px rgba(0, 0, 0, 0.9);
}

/// Main body
///
/// - width limited on larger screens
///
/// - child blocks are full width
///
/// - glow boxes
///
main > * {
    // Width limited based on text size
    max-width: calc(min(32rem, 100%));
    width: 100%;
    margin: 1rem auto;
}
main > iframe,
main > img,
main > table,
main > article {
    // Block elements with rounded corners and box shadow
    display: block;
    margin: 2rem auto;
    border-radius: 1rem;
    overflow: hidden;
}
main > table {
    // Tables
    --box-shadow-rgbv: #{rgbv(white)};
    display: table;
}
main > article {
    // Embedded articles
    --box-shadow-rgbv: #{rgbv(grey)};
}
main > img {
    // Images: red box shadow (since photos generally contain a lot of red)
    --box-shadow-rgbv: #{rgbv(red)};
}
main > iframe.googlemap {
    // Google map widget
    //
    // - 75% of viewport height since is often last anchor in a page
    //
    // - background radial gradient chosen to mimic a blurred map while loading
    //
    --box-shadow-rgbv: #{rgbv(aqua)};
    height: 75vh;
    background: radial-gradient(
	circle at center,
	#b31412,
	#ea4335 5%,
	#f8f0de 10%,
	#f6f5f5 30%,
	#c3f1d5 60%,
	#90daee 90%,
    );
}
main > iframe.resdiary {
    // Booking widget
    //
    // - force background colour to match that of ResDiary widget
    //
    --box-shadow-rgbv: #{rgbv(blue)};
    background-color: white;
}
main > iframe.youtube {
    // YouTube video widget
    //
    // - force aspect ratio to 16:9 as expected by YouTube
    //
    // - representative video colours for background gradient while loading
    //
    --box-shadow-rgbv: #{rgbv(yellow)};
    aspect-ratio: 16 / 9;
    height: auto;
    background: linear-gradient(
	#f0efca,
	#dc1ec5,
	#2e7fe1,
	#0e0d13,
    );
}

/// Special effect: box and text shadows with optional pulsing
///
/// - apply box shadow wherever --box-shadow-rgbv is defined
///
/// - apply text shadow wherever --text-shadow-rgbv is defined
///
/// - apply drop shadow wherever --drop-shadow-rgbv is defined
///
/// - if .pulse class is applied, animate the defined shadow(s)
///
* {
    --box-shadow-rgbv: initial;
    --text-shadow-rgbv: initial;
    --drop-shadow-rgbv: initial;
    box-shadow:
	0 0 1rem 0.7rem rgba(var(--box-shadow-rgbv), 0.5);
    text-shadow:
	0 0 4px rgba(var(--text-shadow-rgbv), 0.9);
    filter: drop-shadow(0 0 4px rgba(var(--drop-shadow-rgbv), 0.9));
}
@keyframes pulse {
    50% {
	box-shadow:
	    0 0 48px 28px rgba(var(--box-shadow-rgbv), 0.8);
	text-shadow:
	    0 0 4px rgba(var(--text-shadow-rgbv), 0.6),
	    0 0 12px rgba(var(--text-shadow-rgbv), 0.9);
	filter:
	    drop-shadow(0 0 4px rgba(var(--drop-shadow-rgbv), 0.6)),
	    drop-shadow(0 0 12px rgba(var(--drop-shadow-rgbv), 0.9));
    }
}
.pulse {
    animation: pulse 2s ease-in-out infinite;
}

/// Special effect: text rotator
///
/// Display list items by rotating each one into view in turn, with an
/// opacity fade and a gentle swipe-up action.
///
/// CSS does not (currently) provide a direct mechanism for
/// determining the index of a list item or the total number of list
/// items, so we use a combination of nth-child-related tricks to
/// construct these as variables for up to a fixed maximum total
/// number of list items.
///
/// CSS does not allow variable names to be used within keyframe
/// percentages, so we use SCSS to construct separate keyframe lists
/// for each possible total number of list items.
///
ul.text-rotator {
    // Fixed-size container for rotating text
    --text-rotator-interval: 2s;
    position: relative;
    display: block;
    width: 100%;
    height: 5rem;
    padding: 0;
}
ul.text-rotator > li {
    // Rotating text item: centered both ways within container
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font: var(--font-head);
    font-size: 2rem;
    text-align: center;
    opacity: 0;
    animation:
	calc(var(--text-rotator-interval) * var(--text-rotator-count))
	ease-in-out
	infinite;
    animation-delay:
	calc(var(--text-rotator-index) * var(--text-rotator-interval));
}
$text-rotator-max: 10;
@for $i from 1 through $text-rotator-max {
    // Animation rules for up to $text-rotator-max items in a list
    ul.text-rotator li:nth-child(#{$i}) {
	// Construct item index
	--text-rotator-index: #{$i - 1};
    }
    ul.text-rotator li:first-child:nth-last-child(#{$i}),
    ul.text-rotator li:first-child:nth-last-child(#{$i}) ~ li {
	// Construct total item count and set corresponding animation name
	--text-rotator-count: #{$i};
	animation-name: text-rotator-#{$i};
    }
    @keyframes text-rotator-#{$i} {
	// Animation covering 100%/$i of the total cycle
	0%	   { opacity: 0; transform: translateY(0.25em) scale(0.95); }
	#{25/$i}%  { opacity: 1; transform: translateY(0)      scale(1);    }
	#{75/$i}%  { opacity: 1; transform: translateY(0)      scale(1);    }
	#{100/$i}% { opacity: 0; transform: translateY(-0.5em) scale(0.95); }
    }
}

/// Special effect: glowing link button
///
a.button {
    --link-rgbv: #{rgbv(white)};
    --button-rgbv: #{rgbv(red)};
    --box-shadow-rgbv: var(--button-rgbv);
    display: block;
    padding: 1rem;
    margin: 2rem auto;
    border-radius: 1rem;
    width: fit-content;
    font: var(--font-head);
    font-size: 1.5rem;
    text-align: center;
    background-color: rgba(var(--button-rgbv), 1.0);
}

/// Special effect: glowing stars
///
.stars {
    --stars-rgbv: #{rgbv(yellow)};
    --text-shadow-rgbv: var(--stars-rgbv);
    color: rgba(var(--stars-rgbv), 1.0);
}

/// Special effect: right-aligned text within invoice
///
article.invoice .right {
    text-align: right;
}
