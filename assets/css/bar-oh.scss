/// Extract RGB vector values from a colour
///
/// @param {Color} $color	Any valid colour
/// @return {List}		Comma-separated RGB values
///
/// This is intended for assignment to CSS variables that can
/// subsequently be used within rgba() expressions to construct
/// semi-transparent versions of the colour.
///
@function rgbv($color) {
    @return red($color), green($color), blue($color);
}

/// Box and text shadows with optional pulsing effect
///
///  - apply box shadow wherever --box-shadow-rgbv is defined
///
///  - apply text shadow wherever --text-shadow-rgbv is defined
///
///  - if .pulse class is applied, animate the defined shadow(s)
///
* {
    --box-shadow-rgbv: initial;
    --text-shadow-rgbv: initial;
    box-shadow:
	0 0 48px 20px rgba(var(--box-shadow-rgbv), 0.5);
    text-shadow:
	0 0 4px rgba(var(--text-shadow-rgbv), 0.9);
}
@keyframes pulse {
    50% {
	box-shadow:
	    0 0 48px 28px rgba(var(--box-shadow-rgbv), 0.8);
	text-shadow:
	    0 0 4px rgba(var(--text-shadow-rgbv), 0.6),
	    0 0 12px rgba(var(--text-shadow-rgbv), 0.9);
    }
}
.pulse {
    animation: pulse 2s ease-in-out infinite;
}

html {
    font-size: calc(clamp(16px, 1vw + 12px, 24px));
    scroll-behavior: smooth;
}

body {
    display: grid;
    grid-template-areas:
	"nav header"
	"nav main"
	"nav footer";
    grid-template-columns: 10rem 1fr;
}

#nav-checkbox {
    display: none;
}

.nav-label {
    display: none;
}

body > nav {
    grid-area: nav;
    display: block;
    position: sticky;
    top: 0;
    align-self: start;
    overflow: hidden auto;
    background: linear-gradient(
	to right,
	rgb(32, 32, 32),
	black 5%,
	rgb(32, 32, 32) 25%,
	rgb(32, 32, 32) 75%,
	black 95%,
	rgb(64, 0, 0),
    );
    font-family: "Special Elite", ui-serif, Georgia, "Times New Roman", serif;
    text-align: center;
    height: 100vh;
}

body > header, body > main, body > footer {
    background: linear-gradient(
	to right,
	rgb(64, 0, 0),
	black 25%,
	black 75%,
	rgb(64, 0, 0)
    );
}

@media (max-width: 800px) {
    body {
	grid-template-areas:
	    "nav"
	    "header"
	    "main"
	    "footer";
	grid-template-columns: 1fr;
    }
    body > nav {
	position: static;
	max-height: 0;
	opacity: 0;
	transition: max-height 0.3s ease, opacity 0.8s ease;
	background: linear-gradient(
	    to right,
	    rgb(32, 32, 32),
	    black 5%,
	    rgb(32, 32, 32) 25%,
	    rgb(32, 32, 32) 75%,
	    black 95%,
	    rgb(32, 32, 32),
	);
    }
    .nav-label {
	display: block;
	font-size: 2rem;
    }
    body:has(#nav-checkbox:checked) > nav {
	max-height: 100vh;
	opacity: 1;
	padding-top: 1rem;
	padding-bottom: 1rem;
    }
}

nav img {
    max-width: 50%;
    max-height: 20vh;
    transition: max-height 0.3s ease;
    width: auto;
    height: auto;
    margin: 0.2rem auto;
}

nav ul, nav li {
    display: block;
    margin: 0;
    padding: 0;
}

nav a {
    display: inline-block;
    color: white;
    margin: 0.2rem auto;
    padding: 0;
    width: 100%;
}

body > header {
    grid-area: header;
    position: relative;
    max-width: 100%;
    margin-top: 0;
    margin-left: 0;
    margin-right: 0;
    padding: 0;
    overflow: hidden;
    text-align: center;
}

body > header > img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    mask-image: linear-gradient(
	to bottom,
	rgba(0,0,0,1),
	rgba(0,0,0,0.6) 40%,
	rgba(0,0,0,0.4) 80%,
	rgba(0,0,0,0)
    );
}

body > header > * {
    position: relative;
    text-shadow:
	0 0 4px rgba(0,0,0,0.6),
	0 0 12px rgba(0,0,0,0.9);
}

body > main {
    grid-area: main;
    max-width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
}

body > main > * {
    max-width: calc(min(60ch, 100%));
    margin: 2rem auto;
    scroll-margin-top: 1rem;
}

body > footer {
    grid-area: footer;
    max-width: 100%;
}

h1,h2,h3 {
    font-family: "Special Elite", ui-serif, Georgia, "Times New Roman", serif;
    text-align: center;
}

h1 {
    font-size: calc(clamp(3rem, 1vw + 2rem, 6rem));
    margin-top: 3rem;
    margin-bottom: 3rem;
}

thead tr:not(:has(th:not(:empty))) {
  display: none;
}

table tbody tr:last-child td {
  border-bottom: none;
}

td > a {
    white-space: nowrap;
}

img {
    display: block;
    max-width: 100%;
    height: auto;
    object-fit: cover;
    object-position: center;
}

.stars {
    --stars-rgbv: #{rgbv(yellow)};
    --text-shadow-rgbv: var(--stars-rgbv);
    color: rgba(var(--stars-rgbv), 1.0);
}

a.button,
main > iframe,
main > img,
main > table {
    display: block;
    overflow: hidden;
    border-radius: 1rem;
}

main > table {
    --box-shadow-rgbv: #{rgbv(white)};
    display: table;
}

main > img {
    --box-shadow-rgbv: #{rgbv(red)};
    background: linear-gradient(var(--img-colors));
}

main > iframe.googlemap {
    --box-shadow-rgbv: #{rgbv(aqua)};
    height: 75vh;
}

main > iframe.resdiary {
    --box-shadow-rgbv: #{rgbv(blue)};
}

main > iframe.youtube {
    aspect-ratio: 16 / 9;
    height: auto;
    --box-shadow-rgbv: #{rgbv(yellow)};
}

a.button {
    --button-rgbv: #{rgbv(red)};
    --box-shadow-rgbv: var(--button-rgbv);
    margin: 2rem auto;
    width: fit-content;
    font-family: "Special Elite", ui-serif, Georgia, "Times New Roman", serif;
    font-size: 1.5rem;
    text-align: center;
    color: white;
    padding: 1rem;
    background-color: rgba(var(--button-rgbv), 1.0);
}

ul.text-rotator {
    position: relative;
    display: block;
    width: 100%;
    height: 5rem;
    padding: 0;
    overflow: hidden;
    --text-rotator-interval: 2s;
}

ul.text-rotator > li {
    font-family: "Special Elite", ui-serif, Georgia, "Times New Roman", serif;
    font-size: 2rem;
    line-height: normal;
    list-style-type: none;
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    opacity: 0;
    animation:
	calc(var(--text-rotator-interval) * var(--text-rotator-count))
	ease-in-out
	infinite
    ;
    animation-delay:
	calc(var(--text-rotator-index) * var(--text-rotator-interval));
}

$text-rotator-max: 10;
@for $i from 1 through $text-rotator-max {
    ul.text-rotator li:nth-child(#{$i}) {
	--text-rotator-index: #{$i - 1};
    }
    ul.text-rotator li:first-child:nth-last-child(#{$i}),
    ul.text-rotator li:first-child:nth-last-child(#{$i}) ~ li {
	--text-rotator-count: #{$i};
	animation-name: text-rotator-#{$i};
    }
    @keyframes text-rotator-#{$i} {
	0%    { opacity: 0; transform: translateY(.25em) scale(0.95); }
	#{25/$i}%   { opacity: 1; transform: translateY(0)     scale(1); }
	#{75/$i}%   { opacity: 1; transform: translateY(0)     scale(1); }
	#{100/$i}%  { opacity: 0; transform: translateY(-.5em) scale(0.95); }
	100%  { opacity: 0; }
    }
}

article.invoice {
    background-color: gray;
}

article.invoice .right {
    text-align: right;
}
